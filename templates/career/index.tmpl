<div class="container theme-showcase" role="main">
    <div class="media">
        <a class="media-left" href="http://www.hiltgen.com/daniel/career/">
            <img src="{{ .BlobPrefix }}/graphics/dh-logo.png" alt="DH Logo">
        </a>
        <div class="media-body">
            <h4 class="media-heading">Overview</h4>

            With 20 years of industry experience in software development
            and technical leadership, Daniel has broad experience with
            container technology, virtualization, systems management, storage,
            networking, web applications, and Linux.

            <p/>
            <h4 class="media-heading">Patents</h4>

            <div class="row">
                <div class="col-xs-6">
                    <dl>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=3&f=G&l=50&co1=AND&d=PTXT&s1=%22hiltgen,+daniel%22.INNM.&OS=IN/%22hiltgen,+daniel%22&RS=IN/%22hiltgen,+daniel%22">10,095,532</a></dt>
                        <dd>(Netkine) Providing excess compute resources with virtualization</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9,665,380.PN.&OS=PN/9,665,380&RS=PN/9,665,380">9,665,380</a></dt>
                        <dd>(VMW) Peer-to-peer network booting</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9,535,684.PN.&OS=PN/9,535,684&RS=PN/9,535,684">9,535,684</a></dt>
                        <dd>(VMW) Management of software updates in a virtualized environment of a datacenter using dependency relationships</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9,442,714.PN.&OS=PN/9,442,714&RS=PN/9,442,714">9,442,714</a></dt>
                        <dd>(VMW) Unified visualization of a plan of operations in a datacenter</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9,389,848.PN.&OS=PN/9,389,848&RS=PN/9,389,848">9,389,848</a></dt>
                        <dd>(VMW) Scheduling a plan of operations in a datacenter</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=1&f=G&l=50&co1=AND&d=PTXT&s1=hiltgen.AANM.&OS=AANM/hiltgen&RS=AANM/hiltgen">9,354,927</a></dt>
                        <dd>(VMW) Securing virtual machine data</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9,223,767.PN.&OS=PN/9,223,767&RS=PN/9,223,767">9,223,767</a></dt>
                        <dd>(VMW) Unified graphical user interface for displaying a plan of operations in a datacenter</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=2&f=G&l=50&co1=AND&d=PTXT&s1=hiltgen.AANM.&OS=AANM/hiltgen&RS=AANM/hiltgen">9,218,200</a></dt>
                        <dd>(VMW) Selective class hiding in open API component architecture system</dd>
                    </dl>
                </div>
                <div class="col-xs-6">
                    <dl>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=3&f=G&l=50&co1=AND&d=PTXT&s1=hiltgen.AANM.&OS=AANM/hiltgen&RS=AANM/hiltgen">9,189,265 9,760,393 10,162,668</a></dt>
                        <dd>(VMW) Storage architecture for virtual machines</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=4&f=G&l=50&co1=AND&d=PTXT&s1=hiltgen.AANM.&OS=AANM/hiltgen&RS=AANM/hiltgen">9,158,550 10,185,573</a></dt>
                        <dd>(VMW) Caching based operating system installation</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=5&f=G&l=50&co1=AND&d=PTXT&s1=hiltgen.AANM.&OS=AANM/hiltgen&RS=AANM/hiltgen">9,098,347</a></dt>
                        <dd>(VMW) Implementation of virtual machine operations using storage system functionality</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=6&f=G&l=50&co1=AND&d=PTXT&s1=hiltgen.AANM.&OS=AANM/hiltgen&RS=AANM/hiltgen">8,949,585</a></dt>
                        <dd>(VMW) In-place conversion of virtual machine state</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=8&f=G&l=50&co1=AND&d=PTXT&s1=8,898,676&OS=8,898,676&RS=8,898,676">8,898,676</a></dt>
                        <dd>(VMW) Management of software updates for software components in a virtualized environment of a datacenter using dependency relationships</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-bool.html&r=1&f=G&l=50&co1=AND&d=PTXT&s1=8,677,352.PN.&OS=PN/8,677,352&RS=PN/8,677,352">8,677,352</a></dt>
                        <dd>(VMW) Interchangeable guest and host execution environments</dd>
                        <dt><a href="http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=7,103,889.PN.&OS=PN/7,103,889&RS=PN/7,103,889">7,103,889</a></dt>
                        <dd>(Sun) Method, system, and article of manufacture for agent processing</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>
<hr/>

    <div class="media">
        <a class="media-left" href="http://www.docker.com/">
            <img width=100px src="{{ .BlobPrefix }}/graphics/docker_logo_dark.png" alt="Docker">
        </a>
        <div class="media-body">
            <h4 class="media-heading">Docker Inc.</h4>
            <dl>
                <dt>Duration</dt>
                <dd><ul><li>02/2015-Present</li></ul></dd>
                <dt>Position(s)</dt>
                <dd><ul><li>Sr. Software Engineer</li></ul></dd>
                <dt>Highlights</dt>
                <dd>
                    <ul>
                        <li>
                        Lead engineer for Docker's Technology and Architecture Steering Advisory (TASA) team providing oversight of all significant internal engineering projects
                        </li>
                        <li>
                        Overall technical lead for the Universal Control Plane product.  Brought numerous versions to market, representing the majority of Docker's commercial revenue.  Worked with Product Management and customers to establish feature roadmap, defined overall architecture, and collaborated with team members to design and implment feautures.
                        </li>
                        <li>
                        Prototyped Kubernetes integration in UCP, pitched to CEO and Executive Staff, which greenlit the project, ultimately adding Kubernetes support into the Docker product offerings
                        </li>
                        <li>
                        Built a libvirt/KVM driver for docker-machine, and internal tooling (testkit) for rapid cluster provisioning for dev/test work
                        </li>
                        <li>
                        Built a virtual disk image to docker image converter - <a href=https://github.com/dhiltgen/v2c>v2c</a> which served as a POC, developed into a formal converter tool
                        </li>
                        <li>
                        Developed a REST API proxy for session managment of a microservices architecture utilizing nginx and lua extensions
                        </li>
                        <li>
                        Presented multiple live demos during DockerCon keynote addresses to over 6000 attendees showcasing new features
                        </li>
                    </ul>
                </dd>
                <dt>Technologies and Languages</dt>
                <dd>
                    Docker, Kubernetes, git, Go, libvirt, Lua, Nginx, Python, Jenkins, REST, gRPC
                </dd>
            </dl>
        </div>
    </div>
    <div class="media">
        <a class="media-left" href="http://www.netkine.com/">
            <img src="{{ .BlobPrefix }}/graphics/netkine_logo_100.png" alt="Netkine">
        </a>
        <div class="media-body">
            <h4 class="media-heading">Netkine Inc.</h4>
            <dl>
                <dt>Duration</dt>
                <dd><ul><li>2013-2015</li></ul></dd>
                <dt>Position(s)</dt>
                <dd><ul><li>Co-Founder, CTO</li></ul></dd>
                <dt>Highlights</dt>
                <dd>
                    <ul>
                        <li>
                        Netkine's goal is to build a true distributed cloud market, bringing buyers and sellers of compute together, supporting datacenter grade compute through desktop compute in peoples houses.
                        </li>
                        <li>
                        Developed a complete custom Linux based cloud compute system derived from Debian/Ubuntu, KVM, and OpenStack.  Supports BIOS and UEFI booting with secure boot, and a ramdisk based root filesystem residing within Windows NTFS or on a dedicated partition.  Customers interact via a simple ncurses console based GUI when booted into "cloud mode", and WiX based Windows installer with Windows Service and GUI to "join the cloud."
                        </li>
                        <li>
                        Developed a Linux kernel module supporting read-write block-device access to image files residing in a read-only NTFS partition to support windows hibernation for rapid switching between Windows and "cloud mode"
                        </li>
                        <li>
                        Designed and implemented a multi-phased approach to Netkine's secure, distributed overlay networking, leveraging Software Defined Networking with Open vSwitch, IPsec, and GRE
                        </li>
                        <li>
                        Troubleshooting of complex distributed storage and networking problems
                        </li>
                        <li>
                        Developed numerous deprivileging solutions on OpenStack to address architectural security limitations when deployed in a distributed environment, ranging from AMQP messaging proxies to REST API Proxies
                        </li>
                        <li>
                        Bug fixes, enhancements, and extensions for various OpenStack components (primarily in Nova, Neutron, and Horizon)
                        </li>
                        <li>
                        Deployed and managed internal IT infrastructure, hardware procurement, server builds, and maintenance
                        </li>
                        <li>
                        Co-developed a GUI based OpenStack Cloud installer, capable of installing both cloud controllers and compute nodes.
                        </li>
                        <li>
                        Installation, and management of OpenStack cloud controllers in a public cloud setting
                        </li>
                        <li>
                        Developed an in-house continuous integration infrastructure and component build system which enables a small team to rapidly develop, patch, test, and maintain an entire operating system
                        </li>
                    </ul>
                </dd>
                <dt>Technologies and Languages</dt>
                <dd>
                    AMQP, aufs, bash, Bootstrap, C, Django, dpkg, Gerrit, git, GRE, grub, IPSEC, Jenkins, KVM, libvirt, LVM, make, MySQL, Nagios, OpenLDAP, OpenStack, OpenVPN, Open vSwitch, Python, RabbitMQ, REST, sbuild, SDN, Thrift, Trac, Twisted, txAMQP, UEFI, urwid, WiX, WxPython, Zeroconf
                </dd>
            </dl>
        </div>
    </div>

    <div class="media">
        <a class="media-left" href="http://www.vmware.com/">
            <img src="{{ .BlobPrefix }}/graphics/vmware_logo_100.png" alt="VMware">
        </a>
        <div class="media-body">
            <h4 class="media-heading">VMware Inc.</h4>
            <dl>
                <dt>Duration</dt>
                <dd><ul><li>2004-2013</li></ul></dd>
                <dt>Position(s)</dt>
                <dd><ul><li>Sr. MTS - Sr. Staff Engineer</li></ul></dd>
                <dt>Highlights</dt>
                <dd>
                    <ul>
                        <li>
                            Primary technical lead of the vISL team (at peak over 20 dev/qa engineers), developing a datacenter wide infrastructure software lifecycle manager.  The tool was capable of installing complex multi-tier datacenter applications such as ESXi, Virtual Center, and VMware Tools, patching, upgrading, and deprovisioning, all while respecting software dependencies and order of operation constraints to ensure the datacenter was never "broken" due to software incompatibilities.  Worked closely with Product Management and select customers to validate product direction.
                        </li>
                        <li>
                            Proposed a new generation of Virtual Appliance platform leveraging composite images to expedite development and patching (delta disks or overlay fs), and began building a team to implement a multi-phased delivery of the vision
                        </li>
                        <li>
                            Led the "Stateless ESX" project, also known as Auto Deploy, a feature where ESXi hypervisors PXE/HTTP boot over the network using centrally managed configuration.  This enables large enterprises to rapidly provision and patch the hypervisors within their datacenter.
                        <li>
                            Lead engineer on the embedded ESXi project responsible for hardware health monitoring, and user-space API extensions working directly with hardware partners to develop extensions on the platform
                        </li>
                        <li>
                            Developed technical presentations and screencasts.  Presented internally, to partners and customers.
                        </li>
                        <li>
                            Co-represented VMware engineering at the DMTF and contributed to the early drafts of the CIM standards for virtualization management
                        </li>
                        <li>
                            Co-developed a dependency based init system for ESXi, similar to Upstart or Systemd
                        </li>
                        <li>
                            Technical leadership and oversight for development of ESXi's native software package format - vSphere Installation Bundle (VIB)
                        </li>
                        <li>
                            Co-developed an in-house build system for tracking opensource projects, enabling developers to rapidly develop patches
                        </li>
                        <li>
                            Developed APIs implementing the SNIA SMI-S standard exposing storage virtualization capabilities of ESX and Virtual Center.  Worked with industry partners to enable their use of the API.
                        </li>
                    </ul>
                </dd>
                <dt>Technologies and Languages</dt>
                <dd>
                    AMQP, bash, C++, git, grub, make, (CIM) MOF, Pegasus, perforce, Protobufs, Python, RabbitMQ, RDF, RPM, scons, SFCB, (CIM) SMASH, SMI-S, Thrift, Twisted
                </dd>
            </dl>
        </div>
    </div>

    <div class="media">
        <a class="media-left" href="http://www.sun.com/">
            <img src="{{ .BlobPrefix }}/graphics/sun_logo_100.png" alt="Sun">
        </a>
        <div class="media-body">
            <h4 class="media-heading">Sun Microsystems Inc.</h4>
            <dl>
                <dt>Duration</dt>
                <dd><ul><li>1999-2004</li></ul></dd>
                <dt>Position(s)</dt>
                <dd><ul><li>MTS-1 - MTS-4</li></ul></dd>
                <dt>Highlights</dt>
                <dd>
                    <ul>
                        <li>
                            Assisted in defining the management software
                            architecture for the 6120/6320 Fibre Channel RAID
                            product
                        </li>
                        <li>
                            Designed and led a distributed team to build the
                            agent tier for "Topology Reporter" which
                            allowed use of C based CIM providers without a
                            CIMOM.
                        </li>
                        <li>
                            Led effort to adopt industry standard
                            FC-HBA API (T11) for Sun's native Fibre
                            Channel stack.  Actively contributed to
                            SNIA workgroup and proposed asynchronous
                            event model which was adopted in the
                            standard. Public C API implemented in C++
                            to maintain binary compatibility.
                        </li>
                        <li>
                            Design, development, testing, and maintenance
                            of a Java based Solaris patch diagnostic and
                            download tool utilizing Servlets, Applets,
                            swing and JDBC.
                        </li>
                        <li>
                            Development and maintenance of C and Java based
                            storage management CLIs, libraries, and utilities
                        </li>
                        <li>
                            Assisted in maintaining a dev lab with multiple TB
                            of storage and servers ranging from Ultra 1's
                            to Enterprise 10000's.
                        </li>
                    </ul>
                </dd>
                <dt>Technologies and Languages</dt>
                <dd>
                    bash, C, C++, cvs, FC-GS, FC-HBA API, Java, make, Pegasus, SFCB, SMI-S
                </dd>
            </dl>
        </div>
    </div>

    <div class="media">
        <a class="media-left" href="http://www.java.com/">
            <img src="{{ .BlobPrefix }}/graphics/java_100.png" alt="JavaSoft">
        </a>
        <div class="media-body">
            <h4 class="media-heading">JavaSoft (Sun Microsystems Inc.)</h4>
            <dl>
                <dt>Duration</dt>
                <dd><ul><li>1997</li></ul></dd>
                <dt>Position(s)</dt>
                <dd><ul><li>Systems Engineering Intern</li></ul></dd>
                <dt>Highlights</dt>
                <dd>
                    <ul>
                        <li>
                            Developed programs showcasing various aspects of Java for prospective customers
                        </li>
                        <li>
                            Provided technical support for sales staff and other System Engineers
                        </li>
                        <li>
                            Participated in on and off-site sales calls as technical support
                        </li>
                    </ul>
                </dd>
                <dt>Technologies and Languages</dt>
                <dd>
                    Java: Beans, RMI, Servlets, Swing
                </dd>
            </dl>
        </div>
    </div>

    <hr/>

    <div class="media">
        <a class="media-left" href="http://www.calpoly.edu/">
            <img src="{{ .BlobPrefix }}/graphics/cp-logo.gif" alt="Cal Poly">
        </a>
        <div class="media-body">
            <h4 class="media-heading">Cal Poly</h4>
            <dl>
                <dt>Graduated</dt>
                <dd>1999 BS in Computer Science</dd>
                <dt>GPA</dt>
                <dd>Major: B+ (3.3)  Overall: B (3.0)</dd>
                <dt>Awards</dt>
                <dd>3 time Deans Honor List</dd>
                </dd>
            </dl>
        </div>
    </div>
</div>
